---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";
import { format } from "date-fns";

export const getStaticPaths = (async () => {
  const blogEntries = await getCollection("blog", ({ data }) => {
    if (import.meta.env.DEV) return true;

    return data.published;
  });

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout>
  <Fragment slot="head">
    <meta property="og:type" content="article" />
  </Fragment>

  <article
    class:list={[
      "box max-w-none",
      "bg-neo-blue prose text-black selection:bg-neo-pink",
      "prose-headings:mb-2 prose-headings:mt-0",
      "prose-h1:mt-0",
      "prose-p:mb-4 prose-p:mt-1",
      "selection:prose-pre:bg-neo-blue prose-pre:box prose-pre:rounded-none prose-pre:bg-neo-pink prose-pre:text-black",
    ]}
  >
    <h1>{entry.data.title}</h1>
    <p>
      {
        entry.data.published
          ? `Published on ${format(entry.data.published, "yyyy-MM-dd")}`
          : "Not yet published"
      }
    </p>

    <Content frontmatter={entry.data} />
  </article>
</BaseLayout>
